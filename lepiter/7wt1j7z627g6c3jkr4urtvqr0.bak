{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:32.974556+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:32.974556+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "EXvFoX7tDQCiKwTVA5+hhQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:01:02.048943+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:01:05.940448+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "23O9on7tDQCiUT58A5+hhQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "(LePage named: '')"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.227444+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.227444+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0Hq9on7tDQCiVYsiA5+hhQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "As a first exercise we want to see how to do a [simple bar chart](https://vega.github.io/vega-lite/examples/bar.html) in Plotter. Then perhaps again in the lower-level Bloc."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.227989+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.227989+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9Xy9on7tDQCiVqa+A5+hhQ=="
				},
				"code" : "barChartSpec := '{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple bar chart with embedded data.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},\n      {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}'.\rdict := STONJSON fromString: barChartSpec.\rdata := ((dict at: 'data') at: 'values') collect: #values.\r"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.229675+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.229675+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "e4O9on7tDQCiWJ6pA5+hhQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "First let's see how it can be done with [[Plotter]] "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.229714+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.229714+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "moO9on7tDQCiWYlSA5+hhQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We work from the example in {{gtMethod:name=GtPlotterVerticalBarChartExamples>>#brickDependenciesSizesBarChart}}. "
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.22973+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-03-24T22:00:49.22973+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "pYO9on7tDQCiWoXPA5+hhQ=="
							},
							"code" : "theData := GtPlotterDataGroup new values: data.\rtheData := theData labelled: [ :each | each first ].\rtheData := theData background: [ :each | Color blue alpha: 0.5 ].\rmaxYValue := 100.\raBarScale := GtPlotterLinearScale new domainFrom: 0 to: maxYValue.\r\rbarChart := GtPlotterVerticalBarChart new.\rbarChart\r\tbarElement: [ :aGtPlotterContext | \r\t\tBlElement new\r\t\t\taptitude: (BrGlamorousWithTooltipAptitude\r\t\t\t\t\tcontent: [ BrLabel new\r\t\t\t\t\t\t\ttext: aGtPlotterContext originalValue second;\r\t\t\t\t\t\t\taptitude: (BrGlamorousLabelAptitude new padding: (BlInsets all: 1)) ]) ].\rbarChart barLabelSpacing: 100.\rbarChart barHeightScale: aBarScale.\rbarChart barWidthScale constant: 50.\rbarChart barHeightData: [ :eachValue | eachValue last ].\rbarChart amountOfTicks: 10.\rbarChart with: theData.\rexample assert: barChart ticksAngle equals: 0.\rexample assert: barChart barGap > 0.\rbarChart"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.229637+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.229637+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UoO9on7tDQCiVzKbA5+hhQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Bar chart in Plotter"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.230041+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-03-24T22:00:49.230041+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "4oS9on7tDQCiXMQqA5+hhQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-03-24T22:00:32.943839+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-03-24T22:00:32.943839+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Demo 2"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "2c02c5a1-7eed-0d00-a22a-4eea039fa185"
	}
}